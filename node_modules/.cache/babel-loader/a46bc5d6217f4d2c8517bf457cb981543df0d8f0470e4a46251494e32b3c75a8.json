{"ast":null,"code":"var _jsxFileName = \"/Users/glaciesclover/Promineo_Tech/Week-16-React_Router_and_React_Bootstrap/recipe_app/src/Components/Contexts.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport RecipeCard from './RecipeCard';\nimport { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport SearchBar from './SearchBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Contexts() {\n  _s();\n  const [recipeList, setRecipeList] = useState([]);\n  const API = \"https://63e6e5dd15d793f46f87f0f3.mockapi.io/recipes\";\n  const [codedRecipeList, setCodedRecipeList] = useState();\n  const codedRecipes = [{\n    id: 0,\n    name: \"Lemon Shrimp Linguine\",\n    contributor: \"Nysha\",\n    ingredients: [\"linguine\", \"shrimp\", \"lemons\"]\n  }, {\n    id: 1,\n    name: \"Sourdough\",\n    contributor: \"Kristina\",\n    ingredients: [\"flour, salt\"]\n  }];\n  let setRecipes = () => {\n    setCodedRecipeList(codedRecipes);\n    console.log(codedRecipeList);\n  };\n\n  /*     useEffect(() => {\n          const refreshInfo = async () => {\n              const response = await fetch(API);\n              const data = await response.json();\n              setRecipeList(data);\n              console.log(recipeList);\n          }\n          refreshInfo();\n      }, []); */\n\n  /*     const getRecipes = async () => {\n          const response = await fetch(API);\n          const data = await response.json();\n          setRecipeList(data);\n          console.log(recipeList);\n      } */\n  /*  \n  const deleteRecipe = async () => {\n      const resourceID = (8);\n      const response = await fetch(\n          API + \"/\" + resourceID,\n          { method: \"DELETE\" }\n      )\n      console.log(\"Book has been deleted\");\n      getRecipes();\n  }\n  */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      children: \" SET RECIPES \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(Contexts, \"tbthdUcoJsU7iXXpZowMOe+VKzw=\");\n_c = Contexts;\nvar _c;\n$RefreshReg$(_c, \"Contexts\");","map":{"version":3,"names":["React","RecipeCard","useState","useEffect","Button","SearchBar","Contexts","recipeList","setRecipeList","API","codedRecipeList","setCodedRecipeList","codedRecipes","id","name","contributor","ingredients","setRecipes","console","log"],"sources":["/Users/glaciesclover/Promineo_Tech/Week-16-React_Router_and_React_Bootstrap/recipe_app/src/Components/Contexts.js"],"sourcesContent":["import React from 'react'\nimport RecipeCard from './RecipeCard'\nimport { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport SearchBar from './SearchBar';\n\nexport default function Contexts() {\n    const [recipeList, setRecipeList] = useState([]);\n    const API = \"https://63e6e5dd15d793f46f87f0f3.mockapi.io/recipes\";\n\n    const [codedRecipeList, setCodedRecipeList] = useState();\n    const codedRecipes = [\n        {\n            id: 0,\n            name: \"Lemon Shrimp Linguine\",\n            contributor: \"Nysha\",\n            ingredients: [\"linguine\", \"shrimp\", \"lemons\"]\n        },\n        {\n            id: 1,\n            name: \"Sourdough\",\n            contributor: \"Kristina\",\n            ingredients: [\"flour, salt\"]\n        }\n    ]\n\n    let setRecipes = () => {\n        setCodedRecipeList(codedRecipes);\n        console.log(codedRecipeList);\n    }\n\n\n    /*     useEffect(() => {\n            const refreshInfo = async () => {\n                const response = await fetch(API);\n                const data = await response.json();\n                setRecipeList(data);\n                console.log(recipeList);\n            }\n            refreshInfo();\n        }, []); */\n\n    /*     const getRecipes = async () => {\n            const response = await fetch(API);\n            const data = await response.json();\n            setRecipeList(data);\n            console.log(recipeList);\n        } */\n    /*  \n    const deleteRecipe = async () => {\n        const resourceID = (8);\n        const response = await fetch(\n            API + \"/\" + resourceID,\n            { method: \"DELETE\" }\n        )\n        console.log(\"Book has been deleted\");\n        getRecipes();\n    }\n */\n\n\n    return (\n        <div>\n            {/* <Button onClick={getRecipes}>GET RECIPES</Button> */}\n            {/*  <Button variant=\"danger\" onClick={deleteRecipe}>GET RECIPES</Button> */}\n        <Button> SET RECIPES </Button>\n        </div>\n    )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,iBAAiB;AACxC,OAAOC,SAAS,MAAM,aAAa;AAAC;AAEpC,eAAe,SAASC,QAAQ,GAAG;EAAA;EAC/B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMO,GAAG,GAAG,qDAAqD;EAEjE,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,EAAE;EACxD,MAAMU,YAAY,GAAG,CACjB;IACIC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,uBAAuB;IAC7BC,WAAW,EAAE,OAAO;IACpBC,WAAW,EAAE,CAAC,UAAU,EAAE,QAAQ,EAAE,QAAQ;EAChD,CAAC,EACD;IACIH,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,WAAW;IACjBC,WAAW,EAAE,UAAU;IACvBC,WAAW,EAAE,CAAC,aAAa;EAC/B,CAAC,CACJ;EAED,IAAIC,UAAU,GAAG,MAAM;IACnBN,kBAAkB,CAACC,YAAY,CAAC;IAChCM,OAAO,CAACC,GAAG,CAACT,eAAe,CAAC;EAChC,CAAC;;EAGD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEI;AACJ;AACA;AACA;AACA;AACA;EACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGI,oBACI;IAAA,uBAGA,QAAC,MAAM;MAAA,UAAC;IAAa;MAAA;MAAA;MAAA;IAAA;EAAS;IAAA;IAAA;IAAA;EAAA,QACxB;AAEd;AAAC,GA9DuBJ,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}