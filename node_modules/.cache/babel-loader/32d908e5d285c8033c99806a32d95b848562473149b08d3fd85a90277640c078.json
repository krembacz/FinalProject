{"ast":null,"code":"var _jsxFileName = \"/Users/glaciesclover/Promineo_Tech/Week-16-React_Router_and_React_Bootstrap/recipe_app/src/Pages/Searched.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport HeroBannerRecipe from '../Components/HeroBannerRecipe';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Searched(_ref) {\n  _s();\n  let {\n    recipeList\n  } = _ref;\n  const [query, setQuery] = useState(\"\");\n  const [searchedRecipeList, setSearchedRecipeList] = useState([]);\n  const API = \"https://63e6e5dd15d793f46f87f0f3.mockapi.io/recipes\";\n  let params = new URLSearchParams(API.search);\n  params.append(\"recipename\");\n\n  /*     const API = (\"https://63e6e5dd15d793f46f87f0f3.mockapi.io/recipes\");\n      API.useSearchParams.append('recipename', 'GF')\n  \n      const [searchedRecipes, setSearchedRecipes] = useSearchParams([]);\n  \n      const getSearched = () => {\n          fetch(API, {\n              method: \"GET\",\n              headers: { \"Content-type\": \"application/json \" },\n          }).then(response => {\n              if (response.ok) {\n                  return response.json();\n              }\n          }).then(recipes => {\n              setSearchedRecipes(recipes);\n              console.log(searchedRecipes);\n          })\n      } */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HeroBannerRecipe, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Searched\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n/* const getSearched = async () => {\n    const response = await fetch(searchAPI);\n    const data = await response.json();\n    setSearchedRecipes(data);\n    console.log(data);\n}; */\n_s(Searched, \"nZs5+NvrpSmWEFcmhqViW92jDAI=\");\n_c = Searched;\nvar _c;\n$RefreshReg$(_c, \"Searched\");","map":{"version":3,"names":["React","HeroBannerRecipe","useState","useEffect","useSearchParams","Searched","recipeList","query","setQuery","searchedRecipeList","setSearchedRecipeList","API","params","URLSearchParams","search","append"],"sources":["/Users/glaciesclover/Promineo_Tech/Week-16-React_Router_and_React_Bootstrap/recipe_app/src/Pages/Searched.js"],"sourcesContent":["import React from 'react'\nimport HeroBannerRecipe from '../Components/HeroBannerRecipe'\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nexport default function Searched({ recipeList }) {\n    const [query, setQuery ] = useState(\"\"); \n    const [searchedRecipeList , setSearchedRecipeList ] = useState([]);\n    \n    const API = (\"https://63e6e5dd15d793f46f87f0f3.mockapi.io/recipes\");\n    let params = new URLSearchParams(API.search); \n    params.append(\"recipename\", )\n\n    /*     const API = (\"https://63e6e5dd15d793f46f87f0f3.mockapi.io/recipes\");\n        API.useSearchParams.append('recipename', 'GF')\n    \n        const [searchedRecipes, setSearchedRecipes] = useSearchParams([]);\n    \n        const getSearched = () => {\n            fetch(API, {\n                method: \"GET\",\n                headers: { \"Content-type\": \"application/json \" },\n            }).then(response => {\n                if (response.ok) {\n                    return response.json();\n                }\n            }).then(recipes => {\n                setSearchedRecipes(recipes);\n                console.log(searchedRecipes);\n            })\n        } */\n\n    return (\n        <div>\n            <HeroBannerRecipe />\n            <h1>Searched</h1>\n        </div>\n    )\n}\n\n\n/* const getSearched = async () => {\n    const response = await fetch(searchAPI);\n    const data = await response.json();\n    setSearchedRecipes(data);\n    console.log(data);\n}; */"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,eAAe,QAAQ,kBAAkB;AAAC;AAEnD,eAAe,SAASC,QAAQ,OAAiB;EAAA;EAAA,IAAhB;IAAEC;EAAW,CAAC;EAC3C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAE,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAM,CAACO,kBAAkB,EAAGC,qBAAqB,CAAE,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElE,MAAMS,GAAG,GAAI,qDAAsD;EACnE,IAAIC,MAAM,GAAG,IAAIC,eAAe,CAACF,GAAG,CAACG,MAAM,CAAC;EAC5CF,MAAM,CAACG,MAAM,CAAC,YAAY,CAAG;;EAE7B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEI,oBACI;IAAA,wBACI,QAAC,gBAAgB;MAAA;MAAA;MAAA;IAAA,QAAG,eACpB;MAAA,UAAI;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QACf;AAEd;;AAGA;AACA;AACA;AACA;AACA;AACA;AALA,GApCwBV,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}